{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","$logProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","debugEnabled","run","$rootScope","$location","$http","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","meanUsers","console","log","vm","this","users","getUsers","success","data","error","e","$inject","profileCtrl","$scope","$compile","leafletData","meanData","extend","vermont","lat","lng","zoom","defaults","scrollWheelZoom","layers","baselayers","osm","name","url","type","attribution","layerOptions","showOnSelector","overlays","legend","position","colors","labels","user","getProfile","tabulateUserStats","joinTopoJson","messageClick","layer","style_poly","towns","feature","properties","fips6","status","setProfile","leafletEvent","popup","options","newScope","$new","stream","status_options","_contentNode","userData","getMap","then","map","get","onEachFeature","buildPopup","on","click","countries","visible","style_color","styles","setStyle","color","fill","weight","divNode","document","createElement","innerHTML","bindPopup","arr","push","groupby","a","driven","Driving","hiked","Hiking","biked","Biking","not_yet","Not yet","userCtrl","$routeParams","username","singleUser","loginCtrl","credentials","email","password","onSubmit","login","err","alert","populateTowns","fips6_list","i","length","registerCtrl","register","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","post","logout","removeItem","service","headers","Authorization","input","put","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute', 'leaflet-directive']);\n\n  function config ($routeProvider, $locationProvider, $logProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/users/:username', {\n        templateUrl: '/users/users.view.html',\n        controller: 'userCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n\n    //turn off leaflet logging\n    $logProvider.debugEnabled(false);\n\n  }\n\n  function run($rootScope, $location, $http, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', '$logProvider', config])\n    .run(['$rootScope', '$location', '$http', 'authentication', run]);\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('homeCtrl', homeCtrl);\n\n  homeCtrl.$inject = ['$location', 'meanUsers'];\n  function homeCtrl($location, meanUsers) {\n  \tconsole.log('Home controller is running');\n  \tconsole.log('And here');\n\n    var vm = this;\n    vm.users = []\n\n    meanUsers.getUsers()\n      .success(function(data) {\n        vm.users = data;\n        // console.log(data);\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n\n  }\n\n})();\n(function() {\n\n    angular\n        .module('meanApp')\n        .controller('profileCtrl', profileCtrl);\n\n\n    profileCtrl.$inject = ['$location', '$scope', '$compile', '$http', 'leafletData', 'meanData'];\n\n    function profileCtrl($location, $scope, $compile, $http, leafletData, meanData) {\n\n        angular.extend($scope, {\n            vermont: {\n                lat: 43.9,\n                lng: -72.4,\n                zoom: 8\n            },\n            defaults: {\n                scrollWheelZoom: false\n            },\n            layers: {\n                baselayers: {\n                    osm: {\n                        name: 'Esri World_Topo_Map',\n                        url: 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\n                        //url: 'http://{s}.tile.thunderforest.com/pioneer/{z}/{x}/{y}.png',\n                        type: 'xyz',\n                        attribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community',\n                        layerOptions: {\"showOnSelector\": false}\n                    },\n                },\n                overlays: {}\n            },\n            legend: {\n                    position: 'bottomright',\n                    colors: [ '#ff7f00', '#377eb8', '#e41a1c', '#999999' ],\n                    labels: [ 'Hiking', 'Biking', 'Driving', 'Not yet' ]\n                }\n        });\n\n        var vm = this;\n\n        vm.user = {};\n\n        meanData.getProfile()\n            .success(function(data) {\n                vm.user = data\n                tabulateUserStats($scope)\n                joinTopoJson($scope, $http, data, vm, leafletData)\n\n            })\n            .error(function(e) {\n                console.log(e);\n            });\n\n        $scope.messageClick = function(layer) {\n            //console.log('option ' + layer.feature.properties.status + ' selected for ' + layer.feature.properties.fips6 + '!');\n\n            style_poly(layer)\n\n            vm.user.towns[layer.feature.properties.fips6] = layer.feature.properties.status\n\n            tabulateUserStats($scope)\n            //console.log(vm.user.towns[layer.feature.properties.fips6])\n\n            meanData.setProfile(layer.feature.properties)\n              .success(function(data) {\n                  //console.log(data)\n              })\n              .error(function(e) {\n                  console.log(e);\n              });\n\n            //takes a while to update the status-- see if we can fix this?\n            //layer.feature.properties.status = layer.status\n\n        };\n\n        $scope.$on('leafletDirectiveMap.popupopen', function(event, leafletEvent) {\n\n            // Create the popup view when is opened\n            var feature = leafletEvent.leafletEvent.popup.options.feature;\n\n            var newScope = $scope.$new();\n            newScope.stream = feature;\n\n            newScope.layer = $scope.layer\n            newScope.layer.status_options = ['Not yet', 'Biking', 'Hiking', 'Driving']\n\n            $compile(leafletEvent.leafletEvent.popup._contentNode)(newScope);\n\n        });\n\n    }\n\n\n    function joinTopoJson($scope, $http, userData, vm, leafletData) {\n\n        leafletData.getMap().then(function(map) {\n\n            $http.get(\"../data/towns.geojson\").success(function(data, status) {\n\n                angular.extend($scope.layers.overlays, {\n                    countries: {\n                        name: 'Club 251 Progress',\n                        type: 'geoJSONShape',\n                        data: data,\n                        visible: true,\n                        layerOptions: {\n                            onEachFeature: onEachFeature\n                        }\n\n                    }\n                });\n\n                function onEachFeature(feature, layer) {\n\n                    var fips6 = layer.feature.properties.fips6\n                    layer.feature.properties.status = userData.towns[fips6]\n\n                    style_poly(layer)\n\n                    buildPopup(feature, layer)\n\n                    layer.on({\n                        click: function() {\n                            $scope.layer = layer;\n                        }\n                    })\n                }\n            });\n\n\n        });\n\n        //vm.user = userData\n\n    }\n\n    var styles = {\n        'Hiking': '#ff7f00',            \n        'Biking': '#377eb8',\n        //'Hiking': '#4daf4a', //green\n        'Driving': '#e41a1c',\n        'Not yet': '#999999'\n    }\n\n    function style_poly(layer) {\n\n        var style_color = (styles[layer.feature.properties.status] || styles['other']);\n\n        layer.setStyle({\n            color: style_color,\n            fill: style_color,\n            weight: 1,\n        })\n    }\n\n    function buildPopup(feature, layer) {\n\n        var divNode = document.createElement('DIV');\n\n        var popup = \"<div class='popup_box_header'><strong>{{layer.feature.properties.town}}</strong></div><hr />\"\n        popup += 'Status: <select ng-model=\"layer.feature.properties.status\" ng-change=messageClick(layer) ' \n        popup += 'ng-options=\"v for v in layer.status_options\"></select>'\n        popup += '</select>'\n\n        divNode.innerHTML = popup\n        layer.bindPopup(divNode)\n\n    }\n\n    function tabulateUserStats($scope) {\n\n        var arr = []\n        var towns = $scope.vm.user.towns\n\n        for (var status in towns) {\n            arr.push(towns[status])\n        }\n\n        var groupby = {};\n        arr.map( function (a) { if (a in groupby) groupby[a] ++; else groupby[a] = 1; } );\n        console.log(groupby);\n\n        $scope.vm.user.driven = groupby.Driving\n        $scope.vm.user.hiked = groupby.Hiking\n        $scope.vm.user.biked = groupby.Biking\n        $scope.vm.user.not_yet = groupby['Not yet']\n\n    }\n\n\n\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('userCtrl', userCtrl);\n\n  userCtrl.$inject = ['$location', '$routeParams', 'meanUsers'];\n  function userCtrl($location, $routeParams, meanUsers) {\n    console.log('in users.controller.js')\n    var username = $routeParams.username\n    var vm = this;\n\n    vm.towns = {};\n\n    meanUsers.singleUser(username)\n      .success(function(data) {\n        vm.towns = data;\n        console.log('town data:')\n        console.log(data);\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  function populateTowns(){\n    var fips6_list = [9030,11040,11015,11050,11060,13005,9080,9005,19050,19060,19085,9060,13015,9010,9095,9090,11075,19070,9065,11080,13020,11020,19090,19020,11070,19015,11030,9015,9020,19055,19065,11010,11065,19095,9045,9025,15005,11045,19005,13010,15045,11025,5040,11035,19010,5070,19040,7050,9040,19030,15010,5060,13025,9050,19045,5010,7080,15030,15050,7075,5085,9055,9085,15025,15035,5025,5065,5030,15040,15020,5035,5075,9070,7045,5055,9035,23095,23100,7005,5080,23025,7060,5005,23050,5045,23030,7020,7040,23090,23045,23035,23060,23055,1095,5020,23070,1060,23040,23015,1025,23010,7010,17040,23005,1015,17060,1100,1065,1075,1105,1050,17075,1005,17025,1110,17020,1055,1080,1010,1020,17070,17080,17030,1040,17065,1085,27075,1090,17050,27020,17055,27080,1070,21075,27085,27095,27055,27015,21005,27040,21047,27025,21135,21035,27045,27060,21110,27070,27115,21125,21060,21070,27050,21030,21065,27105,27005,27090,3045,3015,3030,3020,25050,25030,25110,3050,3075,3025,25045,25080,25095,3005,3070,25075,25015,25090,3060,3018,25073,25065,25060,25020,25025,3010,3080,3055,25105,25055,25010,3040,3035,3065,25100,25040,25035,25085,11055,15015,9075,7025,5015,7090,23020,7065,7055,7035,27065,27120,21095,7015,17010,17045,7030,5050,17035,7070,7085,17085,17015,17005,21085,21120,21130,21055,27110,27035,27030,27011,27100,19080,19035,19025,19075,23065,23080,25070,25005,1035,23075,23085,1030,1115,1045,21020,21115,21040,21015,21045,21010,21080,21140,21090,21100,21050,21025]\n    var towns = {}\n\n    for (i=0; i < fips6_list.length; i++) {\n      towns[fips6_list[i]] = 'Not yet'\n    }\n\n    return towns\n  }\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    var fips6_list = []\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\",\n      towns: populateTowns()\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      console.log(vm.credentials);\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        console.log('registering user!')\n        console.log(data)\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    var setProfile = function (input) {\n      console.log('in set prof')\n      console.log(authentication.getToken())\n      return $http.put('/api/profile/' + input.fips6, input, {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken(),\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile,\n      setProfile : setProfile\n    };\n  }\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanUsers', meanUsers);\n\n  meanUsers.$inject = ['$http', 'authentication'];\n\n  function meanUsers ($http, authentication) {\n\n    var getUsers = function () {\n      console.log('calling find all users')\n      return $http.get('/api/users', {\n      });\n    };\n\n    var singleUser = function (username) {\n      console.log('calling singleUser for: ' + username)\n      return $http.get('/api/users/' + username, {\n      });\n    };\n\n    return {\n      getUsers : getUsers,\n      singleUser : singleUser\n    };\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"],"sourceRoot":"/source/"}