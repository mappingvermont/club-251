{"version":3,"sources":["app.min.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","meanUsers","console","log","vm","this","users","getUsers","success","data","error","e","$inject","profileCtrl","meanData","user","getProfile","userCtrl","$routeParams","username","towns","singleUser","loginCtrl","credentials","email","password","onSubmit","login","err","alert","then","populateTowns","fips6_list","i","length","registerCtrl","name","register","$http","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","post","logout","removeItem","service","get","headers","Authorization","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('meanApp', ['ngRoute']);\n\n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/profile', {\n        templateUrl: '/profile/profile.view.html',\n        controller: 'profileCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/users/:username', {\n        templateUrl: '/users/users.view.html',\n        controller: 'userCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n  }\n\n  function run($rootScope, $location, authentication) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\n        $location.path('/');\n      }\n    });\n  }\n  \n  angular\n    .module('meanApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'authentication', run]);\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('homeCtrl', homeCtrl);\n\n  homeCtrl.$inject = ['$location', 'meanUsers'];\n  function homeCtrl($location, meanUsers) {\n  \tconsole.log('Home controller is running');\n  \tconsole.log('And here');\n\n    var vm = this;\n    vm.users = []\n\n    meanUsers.getUsers()\n      .success(function(data) {\n        vm.users = data;\n        // console.log(data);\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n\n  }\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('profileCtrl', profileCtrl);\n\n  profileCtrl.$inject = ['$location', 'meanData'];\n  function profileCtrl($location, meanData) {\n    var vm = this;\n\n    vm.user = {};\n\n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function() {\n  \n  angular\n    .module('meanApp')\n    .controller('userCtrl', userCtrl);\n\n  userCtrl.$inject = ['$location', '$routeParams', 'meanUsers'];\n  function userCtrl($location, $routeParams, meanUsers) {\n    console.log('in users.controller.js')\n    var username = $routeParams.username\n    var vm = this;\n\n    vm.towns = {};\n\n    meanUsers.singleUser(username)\n      .success(function(data) {\n        vm.towns = data;\n        console.log('town data:')\n        console.log(data);\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();\n(function () {\n\n  angular\n  .module('meanApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'authentication'];\n  function loginCtrl($location, authentication) {\n    var vm = this;\n\n    vm.credentials = {\n      email : \"\",\n      password : \"\"\n    };\n\n    vm.onSubmit = function () {\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('registerCtrl', registerCtrl);\n\n  function populateTowns(){\n    var fips6_list = [9030,11040,11015,11050,11060,13005,9080,9005,19050,19060,19085,9060,13015,9010,9095,9090,11075,19070,9065,11080,13020,11020,19090,19020,11070,19015,11030,9015,9020,19055,19065,11010,11065,19095,9045,9025,15005,11045,19005,13010,15045,11025,5040,11035,19010,5070,19040,7050,9040,19030,15010,5060,13025,9050,19045,5010,7080,15030,15050,7075,5085,9055,9085,15025,15035,5025,5065,5030,15040,15020,5035,5075,9070,7045,5055,9035,23095,23100,7005,5080,23025,7060,5005,23050,5045,23030,7020,7040,23090,23045,23035,23060,23055,1095,5020,23070,1060,23040,23015,1025,23010,7010,17040,23005,1015,17060,1100,1065,1075,1105,1050,17075,1005,17025,1110,17020,1055,1080,1010,1020,17070,17080,17030,1040,17065,1085,27075,1090,17050,27020,17055,27080,1070,21075,27085,27095,27055,27015,21005,27040,21047,27025,21135,21035,27045,27060,21110,27070,27115,21125,21060,21070,27050,21030,21065,27105,27005,27090,3045,3015,3030,3020,25050,25030,25110,3050,3075,3025,25045,25080,25095,3005,3070,25075,25015,25090,3060,3018,25073,25065,25060,25020,25025,3010,3080,3055,25105,25055,25010,3040,3035,3065,25100,25040,25035,25085,11055,15015,9075,7025,5015,7090,23020,7065,7055,7035,27065,27120,21095,7015,17010,17045,7030,5050,17035,7070,7085,17085,17015,17005,21085,21120,21130,21055,27110,27035,27030,27011,27100,19080,19035,19025,19075,23065,23080,25070,25005,1035,23075,23085,1030,1115,1045,21020,21115,21040,21015,21045,21010,21080,21140,21090,21100,21050,21025]\n    \n    var towns = {}\n\n    for (i=0; i < fips6_list.length; i++) {\n      towns[fips6_list[i]] = false\n    }\n\n    return towns\n  }\n\n  registerCtrl.$inject = ['$location', 'authentication'];\n  function registerCtrl($location, authentication) {\n    var vm = this;\n\n    var fips6_list = []\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\",\n      towns: populateTowns()\n    };\n\n    vm.onSubmit = function () {\n      console.log('Submitting registration');\n      console.log(vm.credentials);\n      authentication\n        .register(vm.credentials)\n        .error(function(err){\n          alert(err);\n        })\n        .then(function(){\n          $location.path('profile');\n        });\n    };\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window'];\n  function authentication ($http, $window) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n    register = function(user) {\n      return $http.post('/api/register', user).success(function(data){\n        console.log('registering user!')\n        console.log(data)\n        saveToken(data.token);\n      });\n    };\n\n    login = function(user) {\n      return $http.post('/api/login', user).success(function(data) {\n        saveToken(data.token);\n      });\n    };\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\n    return {\n      getProfile : getProfile\n    };\n  }\n\n})();\n(function() {\n\n  angular\n    .module('meanApp')\n    .service('meanUsers', meanUsers);\n\n  meanUsers.$inject = ['$http', 'authentication'];\n\n  function meanUsers ($http, authentication) {\n\n    var getUsers = function () {\n      console.log('calling find all users')\n      return $http.get('/api/users', {\n      });\n    };\n\n    var singleUser = function (username) {\n      console.log('calling singleUser for: ' + username)\n      return $http.get('/api/users/' + username, {\n      });\n    };\n\n    return {\n      getUsers : getUsers,\n      singleUser : singleUser\n    };\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','authentication'];\n  function navigationCtrl($location, authentication) {\n    var vm = this;\n\n    vm.isLoggedIn = authentication.isLoggedIn();\n\n    vm.currentUser = authentication.currentUser();\n\n  }\n\n})();\n(function () {\n\n  angular\n    .module('meanApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/common/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();"],"sourceRoot":"/source/"}